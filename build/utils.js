var _this = this;
import { initEnv } from './init_env';
export * from './response_data';
export var platform = (function () {
    var haveGlobal = typeof global === 'object';
    var haveBrowserWindow = typeof _this.window === 'object';
    var browser = haveBrowserWindow && !haveGlobal;
    var node = !browser && haveGlobal && global.constructor.name === 'Object';
    var webpack = !haveBrowserWindow && haveGlobal && global.constructor.name === 'Window';
    var electron = haveBrowserWindow && haveGlobal && global.constructor.name === 'Window';
    return {
        browser: browser,
        node: node,
        electron: electron,
        webpack: webpack,
    };
})();
initEnv();
export var AudioCtx = new AudioContext();
export function require(nodeModule) {
    return require(nodeModule);
}
export function isString(string) {
    return Object.prototype.toString.call(string) === '[object String]';
}
export function isNumber(number) {
    return !Number.isNaN(number) && Object.prototype.toString.call(number) === '[object Number]';
}
export function isBoolean(boolean) {
    return Object.prototype.toString.call(boolean) === '[object Boolean]';
}
export function isObject(object) {
    return Object.prototype.toString.call(object) === '[object Object]';
}
export function isFunction(func) {
    return Object.prototype.toString.call(func) === '[object Function]';
}
export function isClass(classBody) {
    return !isString(classBody) && String(classBody).slice(0, 5) === 'class';
}
export function isUndef(val) {
    return val === undefined || val === null;
}
export function isElement(element) {
    return !!(element.nodeType && element !== document && element.nodeType === 1 && element.tagName);
}
export function logError(tipHead, infor, err, warn) {
    if (err === void 0) { err = false; }
    if (warn === void 0) { warn = false; }
    var msg = "[" + tipHead + " tip] --> " + infor + ".\n";
    if (err)
        throw Error(msg);
    if (warn)
        return console.warn(msg);
    console.error(msg);
}
export function download(url, filename) {
    if (!isString(url)) {
        url = window.URL.createObjectURL(url);
    }
    var link = window.document.createElement('a');
    link.href = url;
    link.download = filename || 'download.wav';
    var click = document.createEvent('MouseEvents');
    click.initMouseEvent('click', true, true);
    link.dispatchEvent(click);
}
export function inlineWorker(func) {
    if (!window.Worker) {
        this.errorFn('Worker is undefined', true);
    }
    var functionBody = func.toString().trim().match(/^function\s*\w*\s*\([\w\s,]*\)\s*{([\w\W]*?)}$/)[1];
    var url = window.URL.createObjectURL(new window.Blob([functionBody], {
        type: 'text/javascript',
    }));
    return new window.Worker(url);
}
export function normalNumber(val, max, min) {
    return Math.max(Math.min(val, max), min);
}
export function random(max, min, fractionDigits) {
    if (max === void 0) { max = 100000; }
    if (min === void 0) { min = 0; }
    if (fractionDigits === void 0) { fractionDigits = 0; }
    return +(Math.random() * (max - min) + min).toFixed(fractionDigits);
}
export function randomString(range) {
    if (range === void 0) { range = 16; }
    var chartStr = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIGKMLNOPQRSTUVWSYZ_!~@#$%^&*()+=-><,.?/';
    var string = '';
    for (var i = 0; i < range; i++) {
        string += chartStr[parseInt((Math.random() * chartStr.length))];
    }
    return string;
}
export function hexToRgb(hex, opacity, noCheck) {
    if (!noCheck && !isString(hex)) {
        logError('Utils', "[ hex ] must be a \"string\", but now is " + typeof hex, true);
    }
    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
    var color = hex.toLowerCase();
    if (!noCheck && (!color || !reg.test(color))) {
        logError('Utils', '[ hex ] does not meet the requirements', true);
    }
    if (color.length === 4) {
        var newColorStr = '#';
        for (var i = 1; i < 4; i++) {
            var s = color.slice(i, i + 1);
            newColorStr += s.concat(s);
        }
        color = newColorStr;
    }
    var colorArr = [];
    for (var j = 1; j < 7; j += 2) {
        colorArr.push(parseInt('0x' + color.slice(j, j + 2)));
    }
    isNumber(opacity) && colorArr.push(opacity);
    return colorArr;
}
export function rgbToHex(rgb, noCheck) {
    if (!noCheck && !isString(rgb)) {
        logError('Utils', "[ rgb(a) ] must be a \"string\", but now is " + typeof rgb, true);
    }
    if (!noCheck && !/^(rgb(a?)|RGB(A?))/.test(rgb)) {
        logError('Utils', '[ rgb(a) ] does not meet the requirements', true);
    }
    var rgbArr = rgb.replace(/(?:\(|\)|rgb(a?)|RGB(A?))*/g, '').split(',');
    var hexStr = '#';
    if (rgbArr.length === 4) {
        rgbArr.push(Math.round(rgbArr.splice(3, 1)[0] * 255));
    }
    for (var i = 0; i < rgbArr.length; i++) {
        var hex = Number(rgbArr[i]).toString(16);
        if (hex.length < 2) {
            hex = '0' + hex;
        }
        hexStr += hex;
    }
    return hexStr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9saWIvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBMEtDO0FBMUtELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFDcEMsY0FBYyxpQkFBaUIsQ0FBQTtBQUUvQixNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUcsQ0FBQztJQUN2QixJQUFNLFVBQVUsR0FBRyxPQUFPLE1BQU0sS0FBSyxRQUFRLENBQUE7SUFDN0MsSUFBTSxpQkFBaUIsR0FBRyxPQUFPLEtBQUksQ0FBQyxNQUFNLEtBQUssUUFBUSxDQUFBO0lBRXpELElBQU0sT0FBTyxHQUFHLGlCQUFpQixJQUFJLENBQUMsVUFBVSxDQUFBO0lBQ2hELElBQU0sSUFBSSxHQUFHLENBQUMsT0FBTyxJQUFJLFVBQVUsSUFBSSxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksS0FBSyxRQUFRLENBQUE7SUFDM0UsSUFBTSxPQUFPLEdBQUcsQ0FBQyxpQkFBaUIsSUFBSSxVQUFVLElBQUksTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUssUUFBUSxDQUFBO0lBQ3hGLElBQU0sUUFBUSxHQUFHLGlCQUFpQixJQUFJLFVBQVUsSUFBSSxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksS0FBSyxRQUFRLENBQUE7SUFFeEYsT0FBTztRQUNMLE9BQU8sU0FBQTtRQUNQLElBQUksTUFBQTtRQUNKLFFBQVEsVUFBQTtRQUNSLE9BQU8sU0FBQTtLQUNSLENBQUE7QUFDSCxDQUFDLENBQUMsRUFBRSxDQUFBO0FBRUosT0FBTyxFQUFFLENBQUE7QUFFVCxNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQTtBQUUxQyxNQUFNLGtCQUFtQixVQUFVO0lBQ2pDLE9BQU8sT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFBO0FBQzVCLENBQUM7QUFFRCxNQUFNLG1CQUFvQixNQUFVO0lBQ2xDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLGlCQUFpQixDQUFBO0FBQ3JFLENBQUM7QUFFRCxNQUFNLG1CQUFvQixNQUFVO0lBQ2xDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxpQkFBaUIsQ0FBQTtBQUM5RixDQUFDO0FBRUQsTUFBTSxvQkFBcUIsT0FBVztJQUNwQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxrQkFBa0IsQ0FBQTtBQUN2RSxDQUFDO0FBRUQsTUFBTSxtQkFBb0IsTUFBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxpQkFBaUIsQ0FBQTtBQUNyRSxDQUFDO0FBRUQsTUFBTSxxQkFBc0IsSUFBUTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxtQkFBbUIsQ0FBQTtBQUNyRSxDQUFDO0FBRUQsTUFBTSxrQkFBbUIsU0FBYTtJQUNwQyxPQUFPLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLE9BQU8sQ0FBQTtBQUMxRSxDQUFDO0FBRUQsTUFBTSxrQkFBbUIsR0FBTztJQUM5QixPQUFPLEdBQUcsS0FBSyxTQUFTLElBQUksR0FBRyxLQUFLLElBQUksQ0FBQTtBQUMxQyxDQUFDO0FBRUQsTUFBTSxvQkFBcUIsT0FBVztJQUNwQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLElBQUksT0FBTyxLQUFLLFFBQVEsSUFBSSxPQUFPLENBQUMsUUFBUSxLQUFLLENBQUMsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUE7QUFDbEcsQ0FBQztBQUVELE1BQU0sbUJBQW9CLE9BQWMsRUFBRSxLQUFZLEVBQUUsR0FBVyxFQUFFLElBQVk7SUFBekIsb0JBQUEsRUFBQSxXQUFXO0lBQUUscUJBQUEsRUFBQSxZQUFZO0lBQy9FLElBQU0sR0FBRyxHQUFHLE1BQUksT0FBTyxrQkFBYSxLQUFLLFFBQUssQ0FBQTtJQUM5QyxJQUFJLEdBQUc7UUFBRSxNQUFNLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUN6QixJQUFJLElBQUk7UUFBRSxPQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDbEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtBQUNwQixDQUFDO0FBRUQsTUFBTSxtQkFBb0IsR0FBaUIsRUFBRSxRQUFRO0lBQ25ELElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDbEIsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0tBQ3RDO0lBRUQsSUFBSSxJQUFJLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDN0MsSUFBSSxDQUFDLElBQUksR0FBVyxHQUFHLENBQUE7SUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLElBQUksY0FBYyxDQUFBO0lBQzFDLElBQUksS0FBSyxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFRLENBQUE7SUFDaEQsS0FBSyxDQUFDLGNBQWUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFBO0lBQ2hELElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUE7QUFDM0IsQ0FBQztBQUVELE1BQU0sdUJBQXdCLElBQUk7SUFDaEMsSUFBSSxDQUFPLE1BQU8sQ0FBQyxNQUFNLEVBQUU7UUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsRUFBRSxJQUFJLENBQUMsQ0FBQTtLQUMxQztJQUVELElBQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsZ0RBQWdELENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUN0RyxJQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxZQUFZLENBQUMsRUFBRTtRQUNyRSxJQUFJLEVBQUUsaUJBQWlCO0tBQ3hCLENBQUMsQ0FBQyxDQUFBO0lBQ0gsT0FBTyxJQUFVLE1BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDdEMsQ0FBQztBQUVELE1BQU0sdUJBQXdCLEdBQVUsRUFBRSxHQUFVLEVBQUUsR0FBVTtJQUM5RCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUE7QUFDMUMsQ0FBQztBQUVELE1BQU0saUJBQWtCLEdBQVksRUFBRSxHQUFPLEVBQUUsY0FBa0I7SUFBekMsb0JBQUEsRUFBQSxZQUFZO0lBQUUsb0JBQUEsRUFBQSxPQUFPO0lBQUUsK0JBQUEsRUFBQSxrQkFBa0I7SUFDL0QsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQVEsQ0FBQTtBQUM1RSxDQUFDO0FBRUQsTUFBTSx1QkFBd0IsS0FBVTtJQUFWLHNCQUFBLEVBQUEsVUFBVTtJQUN0QyxJQUFNLFFBQVEsR0FBRyxxRkFBcUYsQ0FBQTtJQUN0RyxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUE7SUFFZixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzlCLE1BQU0sSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUE7S0FDckU7SUFFRCxPQUFPLE1BQU0sQ0FBQTtBQUNmLENBQUM7QUFHRCxNQUFNLG1CQUFvQixHQUFVLEVBQUUsT0FBZSxFQUFFLE9BQWdCO0lBQ3JFLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDOUIsUUFBUSxDQUFDLE9BQU8sRUFBRSw4Q0FBMEMsT0FBTyxHQUFLLEVBQUUsSUFBSSxDQUFDLENBQUE7S0FDaEY7SUFDRCxJQUFNLEdBQUcsR0FBRyxvQ0FBb0MsQ0FBQTtJQUNoRCxJQUFJLEtBQUssR0FBRyxHQUFHLENBQUMsV0FBVyxFQUFFLENBQUE7SUFFN0IsSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1FBQzVDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsd0NBQXdDLEVBQUUsSUFBSSxDQUFDLENBQUE7S0FDbEU7SUFHRCxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQ3RCLElBQUksV0FBVyxHQUFHLEdBQUcsQ0FBQTtRQUNyQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzFCLElBQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQTtZQUM3QixXQUFXLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQTtTQUMzQjtRQUNELEtBQUssR0FBRyxXQUFXLENBQUE7S0FDcEI7SUFHRCxJQUFNLFFBQVEsR0FBTyxFQUFFLENBQUE7SUFDdkIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzdCLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0tBQ3BEO0lBRUQsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7SUFFM0MsT0FBTyxRQUFRLENBQUE7QUFDakIsQ0FBQztBQUdELE1BQU0sbUJBQW9CLEdBQVUsRUFBRSxPQUFnQjtJQUNwRCxJQUFJLENBQUMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQzlCLFFBQVEsQ0FBQyxPQUFPLEVBQUUsaURBQTZDLE9BQU8sR0FBSyxFQUFFLElBQUksQ0FBQyxDQUFBO0tBQ25GO0lBQ0QsSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUMvQyxRQUFRLENBQUMsT0FBTyxFQUFFLDJDQUEyQyxFQUFFLElBQUksQ0FBQyxDQUFBO0tBQ3JFO0lBRUQsSUFBTSxNQUFNLEdBQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQyw2QkFBNkIsRUFBRSxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDNUUsSUFBSSxNQUFNLEdBQUcsR0FBRyxDQUFBO0lBR2hCLElBQUksTUFBTSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUE7S0FDdEQ7SUFFRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN0QyxJQUFJLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ3hDLElBQUksR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDbEIsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUE7U0FDaEI7UUFDRCxNQUFNLElBQUksR0FBRyxDQUFBO0tBQ2Q7SUFFRCxPQUFPLE1BQU0sQ0FBQTtBQUNmLENBQUMifQ==