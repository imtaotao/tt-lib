var _this = this;
import { initEnv } from './init_env';
export * from './response_data';
export var platform = (function () {
    var haveGlobal = typeof global === 'object';
    var haveBrowserWindow = typeof _this.window === 'object';
    var browser = haveBrowserWindow && !haveGlobal;
    var node = !browser && haveGlobal && global.constructor.name === 'Object';
    var webpack = !haveBrowserWindow && haveGlobal && global.constructor.name === 'Window';
    var electron = haveBrowserWindow && haveGlobal && global.constructor.name === 'Window';
    return {
        browser: browser,
        node: node,
        electron: electron,
        webpack: webpack,
    };
})();
initEnv();
export var AudioCtx = new AudioContext();
export function require(nodeModule) {
    return require(nodeModule);
}
export function getClassStr(val) {
    return Object.prototype.toString.call(val);
}
export function isString(string) {
    return getClassStr(string) === '[object String]';
}
export function isNumber(number) {
    return !Number.isNaN(number) && getClassStr(number) === '[object Number]';
}
export function isBoolean(boolean) {
    return getClassStr(boolean) === '[object Boolean]';
}
export function isObject(object) {
    return getClassStr(object) === '[object Object]';
}
export function isFunction(func) {
    var tag = getClassStr(func);
    return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';
}
export function isClass(classBody) {
    return !isString(classBody) && String(classBody).slice(0, 5) === 'class';
}
export function isUndef(val) {
    return val === undefined || val === null;
}
export function isElement(element) {
    return !!(element.nodeType && element !== document && element.nodeType === 1 && element.tagName);
}
export function logError(tipHead, infor, err, warn) {
    if (err === void 0) { err = false; }
    if (warn === void 0) { warn = false; }
    var msg = "[" + tipHead + " tip] --> " + infor + ".\n";
    if (err)
        throw Error(msg);
    if (warn)
        return console.warn(msg);
    console.error(msg);
}
export function download(url, filename) {
    if (!isString(url)) {
        url = window.URL.createObjectURL(url);
    }
    var link = window.document.createElement('a');
    link.href = url;
    link.download = filename || 'download.wav';
    var click = document.createEvent('MouseEvents');
    click.initMouseEvent('click', true, true);
    link.dispatchEvent(click);
}
export function inlineWorker(func) {
    if (!window.Worker) {
        this.errorFn('Worker is undefined', true);
    }
    var functionBody = func.toString().trim().match(/^function\s*\w*\s*\([\w\s,]*\)\s*{([\w\W]*?)}$/)[1];
    var url = window.URL.createObjectURL(new window.Blob([functionBody], {
        type: 'text/javascript',
    }));
    return new window.Worker(url);
}
export function normalNumber(val, max, min) {
    return Math.max(Math.min(val, max), min);
}
export function random(max, min, fractionDigits) {
    if (max === void 0) { max = 100000; }
    if (min === void 0) { min = 0; }
    if (fractionDigits === void 0) { fractionDigits = 0; }
    return +(Math.random() * (max - min) + min).toFixed(fractionDigits);
}
export function randomString(range) {
    if (range === void 0) { range = 16; }
    var chartStr = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIGKMLNOPQRSTUVWSYZ_!~@#$%^&*()+=-><,.?/';
    var string = '';
    for (var i = 0; i < range; i++) {
        string += chartStr[parseInt((Math.random() * chartStr.length))];
    }
    return string;
}
export function hexToRgb(hex, noCheck) {
    if (!noCheck && !isString(hex)) {
        logError('Utils', "[ hex ] must be a \"string\", but now is " + typeof hex, true);
    }
    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/;
    var color = hex.toLowerCase();
    if (!noCheck && (!color || !reg.test(color))) {
        logError('Utils', '[ hex ] does not meet the requirements', true);
    }
    if (color.length === 4) {
        var newColorStr = '#';
        for (var i = 1; i < 4; i++) {
            var s = color.slice(i, i + 1);
            newColorStr += s.concat(s);
        }
        color = newColorStr;
    }
    var colorArr = [];
    for (var j = 1; j < 7; j += 2) {
        colorArr.push(+('0x' + color.slice(j, j + 2)));
    }
    if (color.length === 9) {
        var opacity = +('0x' + color.slice(7, 9)) / 255;
        colorArr.push(opacity.toFixed(1));
    }
    return colorArr;
}
export function rgbToHex(rgb, noCheck) {
    if (!noCheck && !isString(rgb)) {
        logError('Utils', "[ rgb(a) ] must be a \"string\", but now is " + typeof rgb, true);
    }
    if (!noCheck && !/^(rgb(a?)|RGB(A?))/.test(rgb)) {
        logError('Utils', '[ rgb(a) ] does not meet the requirements', true);
    }
    var rgbArr = rgb.replace(/(?:\(|\)|rgb(a?)|RGB(A?))*/g, '').split(',');
    var hexStr = '#';
    if (rgbArr.length === 4) {
        rgbArr.push(Math.round(rgbArr.splice(3, 1)[0] * 255));
    }
    for (var i = 0; i < rgbArr.length; i++) {
        var hex = Number(rgbArr[i]).toString(16);
        if (hex.length < 2) {
            hex = '0' + hex;
        }
        hexStr += hex;
    }
    return hexStr;
}
export function aop(originFun, beforeFun, afterFun) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (beforeFun && beforeFun.apply(this, args) === false)
            return;
        var result = originFun.apply(this, args);
        afterFun && afterFun.call.apply(afterFun, [this].concat(args, [result]));
        return result;
    };
}
export function bind(fun, ctx) {
    function bound_fun(a) {
        var l = arguments.length;
        return l
            ? l > 1
                ? fun.apply(ctx, arguments)
                : fun.call(ctx, a)
            : fun.call(ctx);
    }
    bound_fun._length = fun.length;
    return bound_fun;
}
export function isEmptyObj(obj) {
    for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
            return false;
        }
    }
    return true;
}
export function toFastProperties(obj) {
    function FakeConstructor() { }
    FakeConstructor.prototype = obj;
    var receiver = new FakeConstructor();
    function ic() {
        return typeof receiver.foo;
    }
    ic();
    ic();
    return obj;
}
//# sourceMappingURL=data:application/json;base64,