import { logError, isNumber, isString, isElement } from './utils';
function typeJudgment(matrix) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    if (!Array.isArray(matrix))
        logError('Matrix', "[ Matrix array ] must be a \"array\", but now is [ " + matrix + " ]", true);
    if (matrix.length < 7) {
        logError('Matrix', "[ Matrix array ] must be a \"matrix 3d array\", but the current [ matrix length ] is less than 7, you can use \"getElmentMatrix\" method get matrix 3d array", true);
    }
    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
        var arg = args_1[_a];
        if (!isNumber(arg)) {
            logError('Matrix', "[ " + arg + " ] must be a \"number\" and must be \"0\" or \"1\", but now is [ " + typeof arg + " ]", true);
        }
    }
}
export function getElmentMatrix(el) {
    var initMatrix = 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)';
    if (!el)
        return initMatrix;
    var matrix = getComputedStyle(el).transform;
    matrix === 'none' && (matrix = initMatrix);
    matrix = /(\w+\()([^\)]+)/g.exec(matrix)[2].split(',').map(function (v) { return Number(v); });
    if (matrix.length < 7) {
        matrix = [matrix[0], matrix[1], 0, 0, matrix[2], matrix[3], 0, 0, 0, 0, 1, 0, matrix[4], matrix[5], 0, 1];
    }
    return matrix;
}
export function createElementMatrix(arr) {
    typeJudgment(arr);
    var newMatrix = 'matrix3d(';
    for (var i = 0; i < arr.length; i++) {
        newMatrix += i != arr.length - 1
            ? arr[i] + ','
            : arr[i];
    }
    return newMatrix += ')';
}
export function rotate3d(matrix, x, y, z, deg) {
    typeJudgment(matrix, x, y, z, deg);
    var agl = Math.PI * deg / 180;
    var numSqrt = Math.sqrt(x * x + y * y + z * z);
    var cos = Math.cos(agl);
    var sin = Math.sin(agl);
    var ux = x / numSqrt;
    var uy = y / numSqrt;
    var uz = z / numSqrt;
    var negative = 1 - cos;
    var r0 = ux * ux * negative + cos, r1 = ux * uy * negative + uz * sin, r2 = ux * uz * negative - uy * sin, r4 = ux * uy * negative - uz * sin, r5 = uy * uy * negative + cos, r6 = uz * uy * negative + ux * sin, r8 = ux * uz * negative + uy * sin, r9 = uy * uz * negative - ux * sin, r10 = uz * uz * negative + cos;
    var d0 = matrix[0] * r0 + matrix[4] * r1 + matrix[8] * r2, d1 = matrix[1] * r0 + matrix[5] * r1 + matrix[9] * r2, d2 = matrix[2] * r0 + matrix[6] * r1 + matrix[10] * r2, d3 = matrix[3] * r0 + matrix[7] * r1 + matrix[11] * r2, d4 = matrix[0] * r4 + matrix[4] * r5 + matrix[8] * r6, d5 = matrix[1] * r4 + matrix[5] * r5 + matrix[9] * r6, d6 = matrix[2] * r4 + matrix[6] * r5 + matrix[10] * r6, d7 = matrix[3] * r4 + matrix[7] * r5 + matrix[11] * r6, d8 = matrix[0] * r8 + matrix[4] * r9 + matrix[8] * r10, d9 = matrix[1] * r8 + matrix[5] * r9 + matrix[9] * r10, d10 = matrix[2] * r8 + matrix[6] * r9 + matrix[10] * r10, d11 = matrix[3] * r8 + matrix[7] * r9 + matrix[11] * r10;
    return [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, matrix[12], matrix[13], matrix[14], matrix[15]];
}
export function rotateX(matrix, deg) {
    return rotate3d(matrix, 1, 0, 0, deg);
}
export function rotateY(matrix, deg) {
    return rotate3d(matrix, 0, 1, 0, deg);
}
export function rotateZ(matrix, deg) {
    return rotate3d(matrix, 0, 0, 1, deg);
}
export function rotate(matrix, deg) {
    return rotate3d(matrix, 0, 0, 1, deg);
}
export function translate3d(matrix, x, y, z) {
    typeJudgment(matrix, x, y, z);
    var c12 = x * matrix[0] + y * matrix[4] + z * matrix[8] + matrix[12], c13 = x * matrix[1] + y * matrix[5] + z * matrix[9] + matrix[13], c14 = x * matrix[2] + y * matrix[6] + z * matrix[10] + matrix[14], c15 = x * matrix[3] + y * matrix[7] + z * matrix[11] + matrix[15];
    return [matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5], matrix[6], matrix[7], matrix[8], matrix[9], matrix[10], matrix[11], c12, c13, c14, c15];
}
export function translateX(matrix, x) {
    return translate3d(matrix, x, 0, 0);
}
export function translateY(matrix, y) {
    return translate3d(matrix, 0, y, 0);
}
export function translateZ(matrix, z) {
    return translate3d(matrix, 0, 0, z);
}
export function translate(matrix, x, y) {
    return translate3d(matrix, x, y, 0);
}
export function scale3d(matrix, x, y, z) {
    typeJudgment(matrix, x, y, z);
    var s0 = matrix[0] * x, s4 = matrix[4] * y, s8 = matrix[8] * z, s1 = matrix[1] * x, s5 = matrix[5] * y, s9 = matrix[9] * z, s2 = matrix[2] * x, s6 = matrix[6] * y, s10 = matrix[10] * z, s3 = matrix[3] * x, s7 = matrix[7] * y, s11 = matrix[11] * z;
    return [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, matrix[12], matrix[13], matrix[14], matrix[15]];
}
export function scaleX(matrix, x) {
    return scale3d(matrix, x, 1, 1);
}
export function scaleY(matrix, y) {
    return scale3d(matrix, 1, y, 1);
}
export function scaleZ(matrix, z) {
    return scale3d(matrix, 1, 1, z);
}
export function scale(matrix, x, y) {
    return scale3d(matrix, x, y, 1);
}
export function skew(matrix, x, y) {
    typeJudgment(matrix, x, y);
    var xtan = Math.tan(Math.PI * x / 180);
    var ytan = Math.tan(Math.PI * y / 180);
    var f0 = matrix[0] + matrix[4] * ytan, f1 = matrix[1] + matrix[5] * ytan, f2 = matrix[2] + matrix[6] * ytan, f3 = matrix[3] + matrix[7] * ytan, f4 = matrix[0] * xtan + matrix[4], f5 = matrix[1] * xtan + matrix[5], f6 = matrix[2] * xtan + matrix[6], f7 = matrix[3] * xtan + matrix[7];
    return [f0, f1, f2, f3, f4, f5, f6, f7, matrix[8], matrix[9], matrix[10], matrix[11], matrix[12], matrix[13], matrix[14], matrix[15]];
}
export function skewX(matrix, x) {
    return skew(matrix, x, 0);
}
export function skewY(matrix, y) {
    return skew(matrix, 0, y);
}
export function getAttrTransforms(str) {
    if (!str)
        return [];
    if (!isElement(str) && !isString(str)) {
        logError('Matrix', "[ " + str + " ] must be \"HTMLElement\" or \"string\"", true);
    }
    !isString(str) && (str = str.outerHTML.replace(str.innerHTML, ''));
    var reg = /(['"\s])(\w+\([^)]+\))/g;
    var match = [];
    var res;
    while (res = reg.exec(str)) {
        match.push(res[2]);
    }
    return match;
}
export function mergeTransforms(arr) {
    if (!Array.isArray(arr))
        logError('Matrix', "[ arr ] must be a \"array\", but now is " + typeof arr, true);
    return arr.join(' ');
}
export function setSvgTransform(element, attrs) {
    if (!element || !element.nodeType || element.nodeType !== 1) {
        logError('Matrix', "[ element ] must be a \"HTMLElement\", but now is [ " + (element === document
            ? 'document'
            : typeof element) + " ]", true);
    }
    var originTransforms = getAttrTransforms(element);
    Array.isArray(attrs)
        ? (originTransforms = originTransforms.concat(attrs))
        : originTransforms.push(attrs);
    element.setAttribute('transform', originTransforms.join(' '));
}
var MatrixElement = (function () {
    function MatrixElement(element) {
        this.element = element;
        this.matrixArr = getElmentMatrix(element);
    }
    MatrixElement.prototype.rotate3d = function (x, y, z, deg) {
        this.matrixArr = rotate3d(this.matrixArr, x, y, z, deg);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.rotate = function (deg) {
        this.matrixArr = rotate3d(this.matrixArr, 0, 0, 1, deg);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.rotateX = function (deg) {
        this.matrixArr = rotate3d(this.matrixArr, 1, 0, 0, deg);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.rotateY = function (deg) {
        this.matrixArr = rotate3d(this.matrixArr, 0, 1, 0, deg);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.rotateZ = function (deg) {
        this.matrixArr = rotate3d(this.matrixArr, 0, 0, 1, deg);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.translate3d = function (x, y, z) {
        this.matrixArr = translate3d(this.matrixArr, x, y, z);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.translate = function (x, y) {
        this.matrixArr = translate3d(this.matrixArr, x, y, 0);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.translateX = function (x) {
        this.matrixArr = translate3d(this.matrixArr, x, 0, 0);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.translateY = function (y) {
        this.matrixArr = translate3d(this.matrixArr, 0, y, 0);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.translateZ = function (z) {
        this.matrixArr = translate3d(this.matrixArr, 0, 0, z);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.scale3d = function (x, y, z) {
        this.matrixArr = scale3d(this.matrixArr, x, y, z);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.scale = function (x, y) {
        this.matrixArr = scale3d(this.matrixArr, x, y, 1);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.scaleX = function (x) {
        this.matrixArr = scale3d(this.matrixArr, x, 1, 1);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.scaleY = function (y) {
        this.matrixArr = scale3d(this.matrixArr, 1, y, 1);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.scaleZ = function (z) {
        this.matrixArr = scale3d(this.matrixArr, 1, 1, z);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.skew = function (x, y) {
        this.matrixArr = skew(this.matrixArr, x, y);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.skewX = function (x) {
        this.matrixArr = skew(this.matrixArr, x, 0);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    MatrixElement.prototype.skewY = function (y) {
        this.matrixArr = skew(this.matrixArr, 0, y);
        this.element.style.transform = createElementMatrix(this.matrixArr);
        return this;
    };
    return MatrixElement;
}());
export function element(element) {
    if (!element || !element.nodeType || element.nodeType !== 1) {
        logError('Matrix', "[ element ] must be a \"HTMLElement\", but now is [ " + (element === document
            ? 'document'
            : typeof element) + " ]", true);
    }
    return new MatrixElement(element);
}
//# sourceMappingURL=data:application/json;base64,